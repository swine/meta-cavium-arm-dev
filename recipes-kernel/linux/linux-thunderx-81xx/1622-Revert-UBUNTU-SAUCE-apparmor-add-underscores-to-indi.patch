From f0e1481807a7b65664c9e3dd6167c0b10fd4d147 Mon Sep 17 00:00:00 2001
From: John Johansen <john.johansen@canonical.com>
Date: Fri, 18 Mar 2016 06:06:00 -0700
Subject: [PATCH 1622/1767] Revert "UBUNTU: SAUCE: apparmor: add underscores to
 indicate aa_label_next_not_in_set() use needs locking"

BugLink: http://bugs.launchpad.net/bugs/1379535

This reverts commit ee2d7f94c7e6c72e8cbaafc37e78d50a7bbd2323.

Signed-off-by: Tim Gardner <tim.gardner@canonical.com>
---
 security/apparmor/include/label.h | 4 ++--
 security/apparmor/label.c         | 8 ++++----
 2 files changed, 6 insertions(+), 6 deletions(-)

diff --git a/security/apparmor/include/label.h b/security/apparmor/include/label.h
index 82abbb3..3530efe 100644
--- a/security/apparmor/include/label.h
+++ b/security/apparmor/include/label.h
@@ -232,7 +232,7 @@ for ((I).i = (I).j = 0;							\
 
 #define label_for_each_not_in_set(I, SET, SUB, P)			\
 	for ((I).i = (I).j = 0;						\
-	     ((P) = __aa_label_next_not_in_set(&(I), (SET), (SUB)));	\
+	     ((P) = aa_label_next_not_in_set(&(I), (SET), (SUB)));	\
 	     )
 
 #define fn_for_each_XXX(L, P, FN, ...)					\
@@ -288,7 +288,7 @@ bool aa_label_init(struct aa_label *label, int size);
 struct aa_label *aa_label_alloc(int size, gfp_t gfp);
 
 bool aa_label_is_subset(struct aa_label *set, struct aa_label *sub);
-struct aa_profile *__aa_label_next_not_in_set(struct label_it *I,
+struct aa_profile * aa_label_next_not_in_set(struct label_it *I,
 					     struct aa_label *set,
 					     struct aa_label *sub);
 bool aa_label_remove(struct aa_labelset *ls, struct aa_label *label);
diff --git a/security/apparmor/label.c b/security/apparmor/label.c
index 44fbc1f..2a3ad1c 100644
--- a/security/apparmor/label.c
+++ b/security/apparmor/label.c
@@ -151,9 +151,9 @@ static int profile_cmp(struct aa_profile *a, struct aa_profile *b);
  * Returns: profile in @sub that is not in @set, with iterator set pos after
  *     else NULL if @sub is a subset of @set
  */
-struct aa_profile *__aa_label_next_not_in_set(struct label_it *I,
-					      struct aa_label *set,
-					      struct aa_label *sub)
+struct aa_profile * aa_label_next_not_in_set(struct label_it *I,
+					     struct aa_label *set,
+					     struct aa_label *sub)
 {
 	AA_BUG(!set);
 	AA_BUG(!I);
@@ -198,7 +198,7 @@ bool aa_label_is_subset(struct aa_label *set, struct aa_label *sub)
 	if (sub == set)
 		return true;
 
-	return __aa_label_next_not_in_set(&i, set, sub) == NULL;
+	return aa_label_next_not_in_set(&i, set, sub) == NULL;
 }
 
 void aa_label_destroy(struct aa_label *label)
-- 
1.9.3

